// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: room.proto

package usercmd

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoomMsgType int32

const (
	RoomMsgType_RegisterRoom RoomMsgType = 0 // 注册房间信息
	RoomMsgType_UpdateRoom   RoomMsgType = 1 // 更新房间信息
)

// Enum value maps for RoomMsgType.
var (
	RoomMsgType_name = map[int32]string{
		0: "RegisterRoom",
		1: "UpdateRoom",
	}
	RoomMsgType_value = map[string]int32{
		"RegisterRoom": 0,
		"UpdateRoom":   1,
	}
)

func (x RoomMsgType) Enum() *RoomMsgType {
	p := new(RoomMsgType)
	*p = x
	return p
}

func (x RoomMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_room_proto_enumTypes[0].Descriptor()
}

func (RoomMsgType) Type() protoreflect.EnumType {
	return &file_room_proto_enumTypes[0]
}

func (x RoomMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomMsgType.Descriptor instead.
func (RoomMsgType) EnumDescriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{0}
}

type RoomServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip        string `protobuf:"bytes,1,opt,name=Ip,proto3" json:"Ip,omitempty"`                // ip
	Port      uint32 `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`           // 端口
	RoomNum   uint32 `protobuf:"varint,3,opt,name=RoomNum,proto3" json:"RoomNum,omitempty"`     // 当前的房间数量
	PlayerNum uint32 `protobuf:"varint,4,opt,name=PlayerNum,proto3" json:"PlayerNum,omitempty"` // 当前的玩家总数
	CurRoomId uint32 `protobuf:"varint,5,opt,name=CurRoomId,proto3" json:"CurRoomId,omitempty"` // 当前的房间id
}

func (x *RoomServerInfo) Reset() {
	*x = RoomServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomServerInfo) ProtoMessage() {}

func (x *RoomServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomServerInfo.ProtoReflect.Descriptor instead.
func (*RoomServerInfo) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{0}
}

func (x *RoomServerInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RoomServerInfo) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RoomServerInfo) GetRoomNum() uint32 {
	if x != nil {
		return x.RoomNum
	}
	return 0
}

func (x *RoomServerInfo) GetPlayerNum() uint32 {
	if x != nil {
		return x.PlayerNum
	}
	return 0
}

func (x *RoomServerInfo) GetCurRoomId() uint32 {
	if x != nil {
		return x.CurRoomId
	}
	return 0
}

type RoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type RoomMsgType `protobuf:"varint,1,opt,name=type,proto3,enum=usercmd.RoomMsgType" json:"type,omitempty"`
	Data []byte      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RoomRequest) Reset() {
	*x = RoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomRequest) ProtoMessage() {}

func (x *RoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomRequest.ProtoReflect.Descriptor instead.
func (*RoomRequest) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{1}
}

func (x *RoomRequest) GetType() RoomMsgType {
	if x != nil {
		return x.Type
	}
	return RoomMsgType_RegisterRoom
}

func (x *RoomRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RoomResponse) Reset() {
	*x = RoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_room_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomResponse) ProtoMessage() {}

func (x *RoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_room_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomResponse.ProtoReflect.Descriptor instead.
func (*RoomResponse) Descriptor() ([]byte, []int) {
	return file_room_proto_rawDescGZIP(), []int{2}
}

var File_room_proto protoreflect.FileDescriptor

var file_room_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x63, 0x6d, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x52,
	0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x75, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x75, 0x72, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x64, 0x22, 0x4b, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x6d, 0x64, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x0e, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a,
	0x2f, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x01,
	0x32, 0x4f, 0x0a, 0x11, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x14,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x6d, 0x64, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x63, 0x6d, 0x64, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30,
	0x01, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x75, 0x73, 0x65, 0x72, 0x63, 0x6d, 0x64, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_room_proto_rawDescOnce sync.Once
	file_room_proto_rawDescData = file_room_proto_rawDesc
)

func file_room_proto_rawDescGZIP() []byte {
	file_room_proto_rawDescOnce.Do(func() {
		file_room_proto_rawDescData = protoimpl.X.CompressGZIP(file_room_proto_rawDescData)
	})
	return file_room_proto_rawDescData
}

var file_room_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_room_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_room_proto_goTypes = []interface{}{
	(RoomMsgType)(0),       // 0: usercmd.RoomMsgType
	(*RoomServerInfo)(nil), // 1: usercmd.RoomServerInfo
	(*RoomRequest)(nil),    // 2: usercmd.RoomRequest
	(*RoomResponse)(nil),   // 3: usercmd.RoomResponse
}
var file_room_proto_depIdxs = []int32{
	0, // 0: usercmd.RoomRequest.type:type_name -> usercmd.RoomMsgType
	2, // 1: usercmd.StreamRoomService.Route:input_type -> usercmd.RoomRequest
	3, // 2: usercmd.StreamRoomService.Route:output_type -> usercmd.RoomResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_room_proto_init() }
func file_room_proto_init() {
	if File_room_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_room_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_room_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_room_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_room_proto_goTypes,
		DependencyIndexes: file_room_proto_depIdxs,
		EnumInfos:         file_room_proto_enumTypes,
		MessageInfos:      file_room_proto_msgTypes,
	}.Build()
	File_room_proto = out.File
	file_room_proto_rawDesc = nil
	file_room_proto_goTypes = nil
	file_room_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StreamRoomServiceClient is the client API for StreamRoomService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamRoomServiceClient interface {
	Route(ctx context.Context, opts ...grpc.CallOption) (StreamRoomService_RouteClient, error)
}

type streamRoomServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStreamRoomServiceClient(cc grpc.ClientConnInterface) StreamRoomServiceClient {
	return &streamRoomServiceClient{cc}
}

func (c *streamRoomServiceClient) Route(ctx context.Context, opts ...grpc.CallOption) (StreamRoomService_RouteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StreamRoomService_serviceDesc.Streams[0], "/usercmd.StreamRoomService/Route", opts...)
	if err != nil {
		return nil, err
	}
	x := &streamRoomServiceRouteClient{stream}
	return x, nil
}

type StreamRoomService_RouteClient interface {
	Send(*RoomRequest) error
	Recv() (*RoomResponse, error)
	grpc.ClientStream
}

type streamRoomServiceRouteClient struct {
	grpc.ClientStream
}

func (x *streamRoomServiceRouteClient) Send(m *RoomRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *streamRoomServiceRouteClient) Recv() (*RoomResponse, error) {
	m := new(RoomResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StreamRoomServiceServer is the server API for StreamRoomService service.
type StreamRoomServiceServer interface {
	Route(StreamRoomService_RouteServer) error
}

// UnimplementedStreamRoomServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStreamRoomServiceServer struct {
}

func (*UnimplementedStreamRoomServiceServer) Route(StreamRoomService_RouteServer) error {
	return status.Errorf(codes.Unimplemented, "method Route not implemented")
}

func RegisterStreamRoomServiceServer(s *grpc.Server, srv StreamRoomServiceServer) {
	s.RegisterService(&_StreamRoomService_serviceDesc, srv)
}

func _StreamRoomService_Route_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StreamRoomServiceServer).Route(&streamRoomServiceRouteServer{stream})
}

type StreamRoomService_RouteServer interface {
	Send(*RoomResponse) error
	Recv() (*RoomRequest, error)
	grpc.ServerStream
}

type streamRoomServiceRouteServer struct {
	grpc.ServerStream
}

func (x *streamRoomServiceRouteServer) Send(m *RoomResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *streamRoomServiceRouteServer) Recv() (*RoomRequest, error) {
	m := new(RoomRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _StreamRoomService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usercmd.StreamRoomService",
	HandlerType: (*StreamRoomServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Route",
			Handler:       _StreamRoomService_Route_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "room.proto",
}
